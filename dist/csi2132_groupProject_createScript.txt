CREATE TABLE users(
    user_id INTEGER,
    email VARCHAR(200) NOT NULL,
    _name VARCHAR(15) NOT NULL,
    pswd VARCHAR(32) CHECK (length(pswd) > 4),
    join_date DATE NOT NULL,
    PRIMARY KEY (user_id)
);


CREATE TABLE rater
(
    user_id INTEGER,
	rater_id INTEGER,
	_type VARCHAR(30) NOT NULL,
    found_helpful INTEGER DEFAULT 0 CHECK ( found_helpful > -1),
	wasnt_helpful INTEGER DEFAULT 0 CHECK ( wasnt_helpful > -1),
	PRIMARY KEY(rater_id),
    FOREIGN KEY (user_id)
        REFERENCES users(user_id)
);

CREATE TABLE restaurant
(
	restaurant_id INTEGER,
	_name VARCHAR(30) NOT NULL,
	url VARCHAR(500),
	PRIMARY KEY(restaurant_id)
);

CREATE TABLE restaurant_type(
    type_id INTEGER,
    _name VARCHAR(30),
    PRIMARY KEY (type_id)
);

CREATE TABLE isOfType(
    type_id INTEGER,
    restaurant_id INTEGER,
    PRIMARY KEY (type_id, restaurant_id),
    FOREIGN KEY (type_id)
        REFERENCES restaurant_type(type_id)
        ON DELETE RESTRICT,
    FOREIGN KEY (restaurant_id)
        REFERENCES restaurant(restaurant_id)
        ON DELETE CASCADE
);

CREATE TABLE locations
(
	location_id INTEGER,
	first_open_date DATE,
	manager_name VARCHAR(50),
	phone_number VARCHAR(30),
	street_address VARCHAR(500) NOT NULL,
	opening_hours VARCHAR(500),
	restaurant_id INTEGER,
	PRIMARY KEY(location_id),
	FOREIGN KEY(restaurant_id)
        REFERENCES restaurant(restaurant_id)
        ON DELETE CASCADE
);

CREATE TABLE rating
(
    location_id INTEGER,
    rater_id INTEGER DEFAULT 0,
	rating_id INTEGER,
	date_written DATE NOT NULL,
	price REAL NOT NULL 
        CHECK(price >= 1 AND price <= 5),
	food REAL NOT NULL 
        CHECK(food >= 1 AND food <= 5),
	ambiance REAL NOT NULL 
        CHECK(ambiance >= 1 AND ambiance <= 5),
	service REAL NOT NULL 
        CHECK(service >= 1 AND service <= 5),
	_comments TEXT,
    found_helpful INTEGER DEFAULT 0 CHECK (found_helpful > -1),
	wasnt_helpful INTEGER DEFAULT 0 CHECK (wasnt_helpful > -1),
    avg_rating REAL NOT NULL,
	PRIMARY KEY(rating_id),
	FOREIGN KEY(rater_id)
        REFERENCES rater(rater_id)
        ON DELETE SET DEFAULT,
	FOREIGN KEY(location_id)
        REFERENCES locations(location_id)
        ON DELETE CASCADE
);

CREATE TABLE menu_item
(
	item_id INTEGER,
	_name VARCHAR(75) NOT NULL,
	_type VARCHAR(30) NOT NULL,
	category VARCHAR(30) NOT NULL,
	description TEXT,
	price NUMERIC(5,2) NOT NULL,
	location_id INTEGER,
	PRIMARY KEY(item_id),
	FOREIGN KEY(location_id)
        REFERENCES locations(location_id)
        ON DELETE CASCADE
);

CREATE TABLE rating_item
(
	rating_item_id INTEGER,
	rating REAL NOT NULL 
        CHECK(rating >= 1 AND rating <= 5),
    item_id INTEGER,
	_comments TEXT,
	rating_id INTEGER,
	PRIMARY KEY(rating_item_id),
	FOREIGN KEY(rating_id)
        REFERENCES rating(rating_id)
        ON DELETE CASCADE
);

CREATE TABLE refers(
    rating_item_id INTEGER,
    item_id INTEGER,
    PRIMARY KEY (rating_item_id, item_id),
    FOREIGN KEY (rating_item_id)
        REFERENCES rating_item(rating_item_id)
        ON DELETE RESTRICT,
    FOREIGN KEY (item_id)
        REFERENCES menu_item(item_id)
        ON DELETE RESTRICT
);